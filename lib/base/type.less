//
//  STACK OVERFLOW CAREERS
//  Product UI Style Guide
//  Designed & managed by the Stack Exchange Design Team
//
//  Created May 2, 2014
//  Updated September 10, 2014
//
//  http://careers.stackoveflow.com
//
//  TYPE
//  
//  TABLE OF CONTENTS
//  • VARIABLES
//  • MIXINS
//
//  ============================================================================
//  $ VARIABLES
//  ============================================================================
//  -- Sizes
@fontSize-base:             14;

//  -- Font Family
@fontFamily-sans:           "HelveticaNeue-Regular", "Helvetica Neue Regular", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
@fontFamily-serif:          Georgia, Times New Roman, Times, serif;
@fontFamily-code:           Menlo, Monaco, Consolas, "Courier New", monospace;

//  -- Colors
@copy-color:                @color-grayDark;
@copy_muted-color:          spin(desaturate(lighten(@color-grayMid,25%),8%),14);
@copy_help-color:           desaturate(lighten(@color-grayMid,13%),4%);

@link-color:                @color-blue;
@link_hover-color:          spin(@link-color, 2);

@title-color:               saturate(darken(@color-grayDark,12%),16%);
@title_section-color:       @title-color;
@title_subSection-color:    @color-grayMid;

@quote-background:          @backgroundColor-grayLighter;
@quote-border:              @borderColor-grayDark;
@quote-border_accent:       @color-orange;
@quote-textColor:           @color-grayMid;
@quote_pull-textColor:      saturate(darken(@color-grayMid,19%),3%);

@callout-infoBck:           spin(lighten(@color-yellow,25%),-6);
@callout-infoBorder:        spin(desaturate(lighten(@color-yellow,14%),53%),-5);
@callout-infoText:          spin(desaturate(lighten(@color-grayMid,6%),6%),-2);


//  ============================================================================
//  $ TYPE MIXINS
//  ============================================================================
//  
//  Unlike colors which are set and rarely changed, type values are altered
//  regularly based on the need of the component and context. To maintain the
//  unique variable name syntax, yet make it easy to remmeber variablized sizes,
//  styles, line-heights, font-families, and letter-spacing; we have created a
//  number of shorthand calls that can be used within their appropriate mixin.
//  These type mixin guards deliver the correct value based on the shorthand
//  value passed to it. For example, if you want declare a large, extra-light
//  font value for a title, you could use:
//
//  Example:  .title-page {
//              .fontSize(l);
//              .fontWeight(2);
//            }
//
//  In this example, we are passing the shorthand values of "l" and "2" within
//  their respective mixins, which output:
//
//  Output:   .title-page {
//              font-size: 24px;
//              font-size: 1.714285714rem;
//              font-weight: 200;
//            }
//
//  ----------------------------------------------------------------------------
.fontSize (@s) {
  & when (@s = base)  { .fontRem(@fontSize-base); }
  & when (@s = xxs)   { .fontRem(@fontSize-base * 0.714285714); }
  & when (@s = xs)    { .fontRem(@fontSize-base * 0.857142857); }
  & when (@s = s)     { .fontRem(@fontSize-base * 0.928571429); } 
  & when (@s = m)     { .fontRem(@fontSize-base * 1.285714286); }
  & when (@s = l)     { .fontRem(ceil(@fontSize-base * 1.714285714)); }
  & when (@s = xl)    { .fontRem(ceil(@fontSize-base * 2.571428571)); }
  & when (@s = xxl)   { .fontRem(floor(@fontSize-base * 3.428571429)); }
  & when (@s = xxxl)  { .fontRem(floor(@fontSize-base * 5.142857143)); }
}
.fontRem(@fs) {
  @remValue: @fs / @fontSize-base;
  font-size: ~"@{fs}px";
  font-size: ~"@{remValue}rem";
}
.fontWeight (@w) {
  & when (@w = 2) { font-weight: 200; }
  & when (@w = 4) { font-weight: 400; }
  & when (@w = 7) { font-weight: 700; }
}
//  Line Height Mixin Guard to quickly assign line-height variables
//  Do not declare values with your line-heights (i.e. px, em). This allows
//  for the value to be relative to the declared font-size and have
//  greater flexibility.
.lineHeight (@lh) {
  & when (@lh = base)     { line-height: (@fontSize-base + 6) / @fontSize-base; }
  & when (@lh = tight)    { line-height: (@fontSize-base + 4) / @fontSize-base; }
  & when (@lh = tighter)  { line-height: (@fontSize-base + 2) / @fontSize-base; }
  & when (@lh = tightest) { line-height: @fontSize-base / @fontSize-base; }
  & when (@lh = loose)    { line-height: (@fontSize-base + 8) / @fontSize-base; }
  & when (@lh = looser)   { line-height: (@fontSize-base + 10) / @fontSize-base; }
  & when (@lh = loosest)  { line-height: (@fontSize-base / @fontSize-base) * 2; }
}
.letterSpacing (@ls) {
  & when (@ls = loose)    { letter-spacing: 1px; }
  & when (@ls = base)     { letter-spacing: 0; }
  & when (@ls = tight)    { letter-spacing: -1px; }
}


//  ============================================================================
//  $ TYPE STYLES: BASELINE
//  ============================================================================
//  -- Paragraph Styles
p,.text {
  margin-bottom: 1em;
  margin-top: 0;
  .lineHeight(loose);

  //  -- Indent paragraphs after the first paragraph to help with readability
  // + p { text-indent: 1em; }

  //  When you want a larger, initial paragraph.
  &._lead {
    color: @copy_muted-color;
    .fontSize(xl);
    .fontWeight(2);
    .letterSpacing(tight);
    .lineHeight(base);
  }
  
  //  -- Type Sizes
  &._xlarge {
    .fontSize(l);
    .fontWeight(2);
  }
  &._large { .fontSize(m); }
  &._small { .fontSize(s); }

  //  -- Type Styles
  &._help {
    color: @copy_help-color;
    .fontSize(s);
    .lineHeight(loose);
  }
  &._marginHalf { margin-bottom: @margin-half; }

  //  -- Footnotes
  &._footnotes {
    margin-left: 0;
    padding-top: @padding-half;
    padding-left: @padding-base + 4;
    border-top: 1px solid @borderColor-grayLight;

    li  {
      color: @copy_muted-color;
      .fontSize(xs);
    }
    a   { color: desaturate(@link-color,80%);}
  }  
}

small             { font-size: floor(100% * 0.857142857); }
strong,b          { .fontWeight(7); }
em, i             { font-style: italic; }
cite              { font-style: normal; }

sup.fn {
  padding-right: 2px;
  padding-left: 2px;
}

//  -- Quotes
blockquote, .quote {
  margin: 0.75em 1.5em;
  padding: 1em 1.5em;

  font-family: @fontFamily-serif;
  font-style: italic;
  .fontSize(m);
  letter-spacing: 0;
  .lineHeight(looser);
  color: @quote-textColor;

  border-left: 1px dotted @quote-border;

  // For when you want to add a background to a blockquote, and ONLY A BLOCKQUOTE.
  &._accent {
    background-color: @quote-background;
    border-left: 2px solid @quote-border_accent;
  }
  &._pull {  
    font-family: @fontFamily-sans;
    .fontWeight(2);
    .letterSpacing(base);
    .lineHeight(looser);
    text-align: center;
    color: @quote_pull-textColor;

    border-left: none;
  }
}

//  -- Links
a, a:link, .link {
  color: @link-color;
  text-decoration: none;
  transition: all 0.1s ease-in;

  &:hover, &:focus, &.hover, &._focus {
    color: @link_hover-color;
    text-decoration: underline;
  }
  &:focus, &._focus { outline: none; }
}




//  ============================================================================
//  $ TYPE STYLES: HEADINGS
//  ============================================================================
//  -- HEADINGS
h1, h2, h3, h4, h5, h6, 
.h1, .h2, .h3, .h4, .h5, .h6 {
  .fontWeight(7);
  margin-top: 0;
  margin-bottom: 0.5em;

  color: @title-color;
  // text-rendering: optimizeLegibility; // Fix the character spacing for headings

  > small, > ._small {
    margin-top: -0.25em;

    color: @copy_muted-color;
    font-size: 75%;
    font-weight: inherit;
  }

  //  -- Specific Title Styles
  &._hugeTitle  {
    .fontSize(xxxl);
    .fontWeight(2);
    letter-spacing: -1px;
  }
  &._pageTitle  {
    .fontSize(xxl);
    .fontWeight(2);
    letter-spacing: -1px;
  }
  &._section {
    color: @title_section-color;
    .fontSize(l);
    .fontWeight(7);
    letter-spacing: 0;
    .lineHeight(base);
  }
  &._subSection {
    margin-bottom: 1em;
    color: @title_subSection-color;
    .fontSize(m);
    .fontWeight(4);
    letter-spacing: 0;
    .lineHeight(tight);
  }
}

h1, h2, h3,
.h1, .h2, .h3 {
  .letterSpacing(tight);
  .lineHeight(tighter);
}

h1, .h1 { 
  .fontSize(xxl);
  .letterSpacing(tight);
}
h2, .h2 { .fontSize(xl); }
h3, .h3 { .fontSize(l); }
h4, .h4 { .fontSize(m); }
h5, .h5 { .fontSize(base); }
h6, .h6 { 
  .fontSize(xs);
  text-transform: uppercase;
}


//  ============================================================================
//  $ TYPE STYLES: NOTIFICATIONS
//  ============================================================================
.callout {
  padding: ceil(@padding-base * 1.5);
  //padding-right: 4em;

  color: @callout-infoText;
  .fontSize(base);
  .lineHeight(loose);
  text-indent: 0;

  border-style: solid;
  border-width: 1px;

  &._info {
    background-color: @callout-infoBck; 
    border-color: @callout-infoBorder;
  }
}

